data = "Tile 1621:.*.**...*. *..*..*.*. *.*..*..** .....*..*. .*..*...** *....*...* .*........ *.*.*....* ...*...*.. .*..*....*;Tile 3671:..*.*.***. *.**....** *......... **..*.*... *..***.... ..*.*....* **..***..* ..*......* .........* ......***.;Tile 2803:*.*.*..*.. *.....*... ...**..*** *.*.....** *...*..*.* ..*...**.* ..*...*..* ****.*..** *..**....* *..*.**.*.;Tile 1531:****.***** .***...*** **..*..*.* **.*..*..* *....*..** **.*....*. *.*.**.... ....*..*.. *...*..... **....*...;Tile 1811:*.*...*..* **....*.** *...**.*.. *..**..... .*.*.....* **..*..... **.*...... ..*...**.. .*.**....* **...**..*;Tile 2143:**.***.*.* *..**.**.. ***....... ..**.*...* *.......*. *.*....**. ...*..**** ..**...*.* *.*..*.**. *.*.*...**;Tile 2887:.......**. *..*..*..* ....*..... ...*..**.. ..*....... *...**..** ..*...**.. *.....*.** **..*..**. *...*.****;Tile 3511:.*.**....* *.*...**.* *...**.*** ....*..... ..*......* .***.*..*. *......... *.*....*** .......*.* *..*******;Tile 3911:.*..*.***. *...*.**.. .*..*...** **.*.**.** ....*.*..* ...***.... .....*...* ...**..*.. ***.*.*.*. **.....*.*;Tile 3821:*****..*.. **..*..... ....**.*.* *....*.... *...**.*.* *........* ****...... *.*.*....* ....****** ..*...***.;Tile 3539:*****.**.. *........* ****.*.... .**..*.*.* *.....*... *.*......* **...***.* .*..*..... *.*....... ...*...*..;Tile 3251:....*..**. .***.*...* *..*.....* ...*.....* ..*....... .**..*...* *.......** *.....*... ....*..*.* ******.*.*;Tile 2677:.*...*...* ...*.***.. ......**.. *.**.**... *.*...*.** *..*****.. ......**.. ......**.* *..*..*... ..**.****.;Tile 3011:*.*..*..** *.***..*.. *..*..**.. *.*..*...* **...***** ....*..*** .*..*..*.* ..*...*..* **.**..*.* .*.**.....;Tile 1489:*...**.*** *.*..*.... *.....*..* **..*..... ...*....** .**.**.*.* *.*......* *........* ....*..... **.*.*****;Tile 3769:.....****. **....**** ***....*.* .**..*.*.* .......... **....**** *...*..*.. ...*.....* **.*.....* *...**.***;Tile 2293:.*..*.*... ****...... **...*.... ***.*.*... .**.**...* ......*.*. **.....*.. *..*.**.** .**....**. .*.....*..;Tile 3947:.*.*...**. .......... ..*...**.* ..***..*.* **...*.*** .*..*..*.. *.*....*.. ....*.*..* .*....**** ******..*.;Tile 1223:*..*****.* ***..*..** **.***.... ...**.*... ..*.**.*.. **.***...* ...*..*.** ...*..*... .*....*..* *..****...;Tile 3331:*.....**.. **..***.*. .**.*...*. .**..*.*.. *......*.. ...*.....* ***.*.*... .**......* *..*...... ...*...***;Tile 3691:*..*..*.** ......*..* *.*..**..* ***....... *.*....**. **.*..**.. *......*.. ..*....... ...*.*..*. *..*......;Tile 1289:*.......*. **.**....* ****...... .*..*.*..* *.*.*..*** *..*...... **.*****.. .*........ **.**....* **.*******;Tile 2857:.*.*..*.** .....*.*.. *..*...*.. .**...*..* **..*..*.* *..*..*..* ...*...... *.*.*..... **...*.... ....*.**..;Tile 3559:*.**..**.. ..*.**.*** **..*....* *.*..*..*. **.****..* .....*...* *....*.... **..*.**.. *..*.....* ***.**..**;Tile 2633:...*.*..** **.......* *...**..*. *.*....*.* .........* ...*.....* .*.**....* ...*..*... *.*.**.... ..*..**...;Tile 1973:*.*.....*. *.......*. *....*.... .*.*...**. .........* *.......*. ...*.**..* .**...*... **..*..*.. ****..**.*;Tile 1373:*****.*..* **.**..*** *.****...* ..***.*... ....**...* *...*....* **.*....** .......*.. **.*.**.*. *.***.**.*;Tile 1759:.*.....**. *.*..*...* ....***..* ........** ....*..... .....*..*. *...*....* .*..*...*. ...*.*.*.. **...*..**;Tile 1213:*....***.* ***...**.* .*.....*.* *......**. .*...*.**. .**....... ....**...* *......... .........* *.....*.**;Tile 2341:*.....*.*. ...**.*..* .....**..* ......**.* *...*....* ..*...***. ..**.*.*.* .*.*....** .*.....*** .*.*...**.;Tile 3547:****.*.*.* ...***...* *..*.**... **..*.*... *....*.*.* .*.......* .*.*...... ***.....*. *.*....*** .*.**.*...;Tile 2003:*****.**** ...*..*..* .*.......* *.*.*...** .*.*.*..*. *......*.. ...*..*... .*...*.*.. *........* ****.***..;Tile 2861:*..**.**.. ..*.*....* ....**.*.. **........ *......... **.....*.* **.....**. ****.....* ***..***** .........*;Tile 3697:*..**.**** .....*.... *.*.*.*.*. *.**...*** ..**.....* .*.......* .**....... *.*..*...* .*.***.*.. ****.****.;Tile 3929:.*.**..*.* **.*....** ....*.*..* ....*.*.*. **........ ...*..*... ***....*.* *........* .***.**.** ***..*****;Tile 3527:*.*.*...*. ****.*.... ......*... .**......* .*......** .**.*.*.** *..*...... *.....*... .*........ ..*..****.;Tile 1777:.*..*...** *....***.. ..*..**.** ..**...*.. ....*.*... *...**.*.. *..**.*..* ...**..... .*....*..* .*..*..***;Tile 1543:......*... .*...**... *...*..*.* .......... *..**....* ..*.*...** ...*.****. **....*... ...*..**** .*.*..****;Tile 2063:**....*... *.....*... ***.**...* ......*..* ...**..*.. ***.*..... **.....**. *..*.**... **.***..** *....***..;Tile 1181:*.**...*** ****.*.... .........* ****..**.* .....*..*. .......*.. ..***....* **..**.... *.*...*..* .*.*.*...*;Tile 3491:*...***.** ..**..*.** .......**. .......... .....*..*. *..*...... **....*.*. ...**...*. ..***..... ..*.**..*.;Tile 1873:...*.....* ...*.*..*. **.*...... .*...*.*** *.*.*..*.. .....***.* *..*..*... ....*..... .....*.*.* ******...*;Tile 2579:.****...*. *..*..*..* .....*...* *.*..*...* *.....**.. ......*..* *......**. .*...**... .*...**... .**.****..;Tile 1481:.*.*.***** ..*.*.**.. .***...*.* ...**..... ..*.*.*.*. .*.......* **.*....*. *.*...*... .***..*... ......**.*;Tile 2417:.*..*..*.* .*.*.....* .***..**.* *.*.*..... *....*.*** ..*..*.... *....*.*.. ****....** ..*.*...** ....******;Tile 3581:..**.....* .....**..* *......... *....**..* *..*....*. *.....*..* .*..*.*.*. ...*...... .....**..* *.........;Tile 3593:*.**.***.. ***.....** **.*....*. ***.*....* ***....*.* *.*..*..** ......*.** ...*....*. .*...*..*. ..*****..*;Tile 3167:*...*.*.*. ......*.** **.**.*.** *...*.**.* ....*...*. ..*....**. ...*...**. ...**..*.. ....*.**.* **.*....*.;Tile 1439:...**..*** *.*......* ..*..***.* ....*.*... *......... ......*..* ..*.*.*..* **.*.*.... ..*...*..* *.***.*...;Tile 1249:..*.**...* *.*......* .......*.. **.*.*.*.* .*..*..*.. ..*.*..*.* .....**.*. *........* ..*..**.** ..*..*****;Tile 2687:**...**... ***.***.*. *...***..* .*.......* ....*.*... .....***** **.*****.. *....*.... ..*.****.* **....*.*.;Tile 2693:..*..*..*. ....*..*** ....**.... .*.**..... .*..***... ..**.*.... *......... ....**.**. ..*..*.... .*.*......;Tile 1741:.*.***..** ......**** *.......** *.*......* **..*...*. **.....*.* *..*...... ..**.*..** *..*...... *.*..***.*;Tile 3413:...****.*. .*..*.**.. *....*.**. **.*.....* **.***..** .......*** .*....***. *....**..* **.****..* ....*.***.;Tile 3191:.....****. **.**..*.. .**.*.**.* .......*** ....****.. .*.*..*.*. ...*...*.. **..*..*.* ...*..*... ..**..*.*.;Tile 2897:*.*******. ...*....*. *.....**.* ***.*...*. **.*****.* ..*.**..** *.**...... **.*.**..* *.*....*.. *.**.*.***;Tile 2017:**.**...** *...*.**.. *..*.*...* .**....... **.......* **..*.*..* **.*.*.*.* .......... .......... ..******.*;Tile 2939:*...**.**. .....*.**. ....*.*... *.*......* .*.....*.* .........* ***.....** ......*..* *..*..**.. .**..*.**.;Tile 1753:*...*.*.** .*...*...* ***..*.*** *..**....* *..*...... *.**...*.. ..*...*... *..*...... .*.......* ....*.*.**;Tile 3229:*..****.*. *.....*..* ......**.. *.*...**.* *...*...** *.*....*.* .*..**..*. *..*.....* *..**..... .*.*.*..**;Tile 1367:****.....* ...*.**... ...*...*.. .*.***..*. .........* .*........ .......... .*...***.* **........ ...**..*.*;Tile 2851:..*.*...** *.....**.* .**.*..*.* *...***..* ***...*... ....*..*.* ..*....... *.....*... ...*.*...* .***..*..*;Tile 2357:....**.*.* ***...*.** ****..**.* *.****...* *...**...* *.*......* *..**.*.*. *.*....*.* .***...*.. ****..*.**;Tile 1697:*..*.*.**. .......*.. ...**....* **........ ....*....* **.*.....* .**......* *....*..*. **.**...** *....*...*;Tile 1571:*.***...*. **..*..*.. .........* ...*.*.*.. *........* *..**.*... **...**.*. .......... ....*.*... .**.....*.;Tile 3323:*.*.*..*** *...*...** .......*.* *.**...... ..*.*..**. *.......*. ....****.* ....**...* ..**....** ******.***;Tile 3461:*....**.*. ....*..... *......**. **.....**. *..*...**. .*.......* **.*...... .......... .....*..** .....*.***;Tile 2719:.*.*.*.... ..*..*.**. ..**...*** ..*..*...* **.......* .*........ .**..*.... ..**..*... ..*....*.. .*.*.*..*.;Tile 3359:.***...*.* .....***.* *..****.*. .....**..* ..*.*...*. *.*..***.. ..*....*.* ....*.*..* .....*..*. *.***.*..*;Tile 3803:.****.*..* ...*...*** .......**. .......**. *..*..*..* **...*.... ....**.... **........ ..*..***** ..*..**...;Tile 3019:**..***.*. ..*....... **..*.**.* **......*. *......*.. *.*....*.. .***.***.* *..*.**..* ***.**.*.* .***.***.*;Tile 2791:......*.*. *....*.... **...***** ....**.... *.....**.* ..**...... *.*...*..* ...**...*. ..**....*. **.**..*..;Tile 3881:*....**..* ...*..*..* .***..*..* ...*....** *...*..*.* *.*.*..*.* *..**..... ...*...... *.*....*.. .*..**.***;Tile 2087:.*..*.*... ***....*** .***..*.** ........** ***.**..** ...*...*.* *...*....* **..*....* *..****.*. **..*****.;Tile 1789:******.*.. ........*. ..*...**.* .*.......* .*...*.... *..*.*..** *****.*..* *...***..* .*.*....** ****.**.*.;Tile 2539:*.***.*..* ..*..*...* **.**.*... *.....**.. *..**..*.. ..***.**.* *..***...* .***.*.*.. *...*..... ..***.**..;Tile 2111:****..***. *....***.. ..*.....** *....**.** *.....*... *..*.*.... ...*..**** **..**..*. **.....*.* *.*...*.*.;Tile 1433:*.....*..* .*.***.*.* .*...*.*.* .......*** *..**.*... .*...**.*. *..*....** *......*.. ....*..*.* ..*.*..**.;Tile 1667:..**...... *..*....*. .**.*..*.* .....*.... *.*.**..*. ...**..... ..*.*....* *.*..*...* ...*...**. ....*....*;Tile 2389:.*.*...*.. .*.......* .....*.... *...***..* .......... .*........ .*.***.*.* *....*..*. ..*......* **...*...*;Tile 1069:...***..** ...*.....* **......** ....**.... ..*..**..* **..*..*.* **.*.*.*.* .*..***..* *.*....... .*.*.*....;Tile 1103:..***.**.. ...**..*.* *....**..* ....*..*.* *....*.*.. ***....*** ..*...**.. ..**.....* *........* .****..*..;Tile 3761:....*.**.. ***....... *...*..... ..**.*...* *........* .***...... ...*..*... ...*.*.*.. *....*.*.* ....*...*.;Tile 2473:........** .*.*..*... .*........ .****.*.** **..**...* **.....*.. ***.*..*.* .......... .*.*..**.* ..*....*.*;Tile 1987:...*..*.*. ......*... *....*.*** ..*....*.. ..*..**..* ........*. *..*.....* ...*..*..* .......*.* ...***.**.;Tile 1187:..*.*.*..* **.*...**. *......*.* ....*....* ..**...*.* *..*..*.** .......... ..**...*.* ...****..* .*.*.*****;Tile 2699:***.*.**.* .*.*****.* .*..*..*.. .***....** ..*..**..* .....*...* .......... *...**...* *......... **..*..*.*;Tile 3643:..**...*.. *..*..*.** *.***.**** ..**..**.. ......*... **.**..*.. ...*.**.** ....*..*.* **..*....* *....*...*;Tile 3463:..***.**.* ......**.* *........* ......**.* **.......* **..*..*.* **.......* **......*. **.*.**... .***..*.**;Tile 1117:*.*.**.... ..*..*.*** .*..*..... ...*.*.... ........*. **.***...* ..*..*.*.* ....*..*.. ..*.*....* ..*.*..*..;Tile 1163:.**.**..** ....*..*.. **..*..*.. *..*.....* *..*.....* ..*.**.... ...*.*.... ..***..*.* ...*...*.* ***.******;Tile 3557:*.*....*.. ....****.* .*....**** ..*...***. *......*.. .......*.. **....*... **.....*.. ...*..*.*. ...***.*..;Tile 2467:.****....* .*.*..**.* ****...... ......*.*. *.*....*.* **.....*.. ..*....*.* ..*.**...* .*.....*** *...**.**.;Tile 1471:.***..*.** **.*...**. .*...*.... ....**..*. ........*. **....**.* ***..**.*. *....***.* **.....**. *..*..**.*;Tile 3931:*....*..** *...*..*.. .*..****** *.***...*. ....*.**.* *.*...**** *....*..*. ....**.*.. *..*..**** *.*.*.....;Tile 2029:**.*.***** *.*......* *...**...* *...*..... *..**..... *.....**.* ....**.... ..**.*.*** ***.*.***. ..****.**.;Tile 1913:*..***.*** .......*** .*..*.**** .*..*.*... ..*....... .*....***. .***..*.*. *....*..*. *.*..*.*.. .*..*.*.*.;Tile 2213:..*.**.*** ......***. ..*..*...* *..*..*.** *....***.. ...*....*. *.**.*..*. **.*...*.. .**....*** ****.*..*.;Tile 1511:***.*...** .**.....*. .**...*..* ...**.**.. *.*..*.*.* **...***.* ***..*.*** .**.**..*. *......*.. ***.....**;Tile 2243:*..*.*...* **...*.... .....*.*.* ....**..*. *..******. .*..*.**.. *......... ...*.**.*. .*.......* .**...*.**;Tile 3701:...******* *..*...**. ...****..* ..*..*...* **........ *.....*..* **..*.*... **.*.**.*. .**....... ***.*...**;Tile 3137:.*.****... *..*.*...* .......*.* *..*.....* *.....*... *...***.** .***...*.* **......** *.*....*.* **...****.;Tile 2437:*...*..*** .*.*....*. ....*...*. .......*.* *.*...**.* ***..*...* *.**..*... ....*..... *.*.*.**.. .*.*.*.***;Tile 1009:..*.*.*... ...*..**.. **...**..* ........** **...***.* *....*...* ..*..*...* ..****.*** *......... ****..*..*;Tile 2399:..****.*.. ***..*.... *..*..**.. ...*.*.... **.**..... **.***..*. **..**..** ***....*.* ..*......* *.***..**.;Tile 2843:.....*.... ......*... .**.*....* ..*....*.. .**.....** .*...**.*. ****..**.. .**....**. ....**...* *..***...*;Tile 1193:**.....*** .......*.. .*...*.*.. *.*...*.** ..*.....** .*.....*.. *...*....* **.*..*.*. **.....*.* *..*.....*;Tile 1951:***......* .......... .......... *****..... *.**..*... .........* **.**..... *.*..*.**. .*...*...* ..*.***...;Tile 1879:*...*..... .*.......* ***....... *****..... *..*.*.... ...***.**. *.......*. *.*......* .*..**.... ..*.**.***;Tile 3469:..****...* *...*...*. ......***. ........*. ****.....* *...*...*. ...*....** *..*..*..* ..*...**.* *****..*.*;Tile 2161:****.****. ***...*.** .**...*... *..*...*.. **...**.*. *......... *...**...* ....*.*..* ..*.**..** *.......**;Tile 2083:**.**.*..* *.**.*..*. ...*.....* **.*.**.*. .....*..*. *.......*. ...***.*.* ....**...* *.**.*...* **.*...***;Tile 2089:*.*.***.*. *..**..... .....*...* *......... .**...**** *...**...* .*.......* ....*...** *..**....* .....**.*.;Tile 1051:*.....**.* .....**.*. *...*....* .*.*...... ........*. .......*.. **....*.** *.......** *........* ****.**.*.;Tile 3347:....**.*.. *.*.*..*.* **........ ..*....*.. **...**... .**.*..... *........* *..***.... .....*...* **.**.*..*;Tile 2927:*.**...... ...*..*.** .*.*.*.**. .......... **....*... **.*...*.. ....**.**. *....*.*.. ..*.....*. **.***.*..;Tile 1301:*..**.*.*. *.*......* ..*...*..* **....*..* *......... .......*.* ....**.*.. *..*.***.. ..*.****** ...***.***;Tile 2459:*..***.... ...***.*** **........ **..*..*.. **.*.**.** *.**.*..*. *..**..**. .*...**..* *........* ..*.******;Tile 1583:.*.*..*..* *.*.*....* .**....... .........* *....*.... **...***.* *.*....... .........* *...*....* *.***..*.*;Tile 3533:.*.**.*..* .*.......* ........*. .*...*...* *......... .......*.* ...*...*.. **..*..*.* ...*.***.. .***..****;Tile 1993:*.****..*. ..**.*.*.* .*.*...... .*........ ..*....... *.**..*..* **..*..... .*.**..*.. ........*. .*.*.***.*;Tile 3853:..*.****.* **....**.* ..*......* ....*..... .....*.**. ......*..* ..*..*.*.* **....*... ***.*..**. **...*.*.*;Tile 2113:*..*.*.*.* *.....*.** *.....*..* .**....*.* **.*.***** *..*...... ...*...*.. ...*.*..** .......**. ..**....**;Tile 3319:****.*..** **....*.*. *.......*. ......*..* ****...**. .......... **.....*.. ..*..*..** *...*..... .**..*...*;Tile 3847:...**..*.* ..*.**...* ...*..**** *..*.*.*.. *........* *....**..* *....*..** .*.*.**.** .****..... *....**..*;Tile 1283:..**..***. **.......* *.*.*..... .*.*....*. ..*..*.... *...*..... **.......* .**.*...** **.****... **..*..***;Tile 2957:*.****.*.* *..*..**.. *..***...* *.*..*.*.. *.......*. *.*..*...* ******.... *.......** *...*...*. .**..*.**.;Tile 1097:.***.*.*** *......**. *........* ....*...*. ..**..*.*. *....*..** .***...**. ..**.*...* *..*.****. *.*.......;Tile 1399:*.***..*** *...**.*** ....*.*... *...**.*.. ..*...*..* *...***... .......*.. ..*.*.*... ...**...*. ...**..**.;Tile 1451:*.*...*.*. *........* *.*....*.* ***.*..... ....**.... .**.*..*.. .*.****..* ..*..***.* ...*...*.* *...**.*.*;Tile 1559:*..*.*.*** ......*... .....*..** *......... **..*..... ...*...*.. **.*.*.... .....*.**. *...*.*.*. ...*****..;Tile 3391:*.*.*.*..* **..*..... .*...***.. ......*..* *.*.....*. ...*..*... .*......*. .......*.. .....*.*.* *.*.*.**.*;Tile 2423:*.*.*....* *......*.. *.*.*.*.** ...*.*.*.* ....*.*.*. .......*.. .**.....*. .........* *.*..*...* ...**..**.;Tile 2297:.....***** *..*...... *...*..... **...*.*.. .......**. *.......*. ***....*** ..*.....*. .....**... **.**.***.;Tile 2011:*******... *.*...*.*. ...**..*.. ...**..*.* ......*..* *..*.....* ...*.*.... ....*.*... ..*.***..* *.*****.*.;Tile 1049:*.*...*... .......*** *..*.*..** **.......* .*.***...* **....*... ...*.**... ........*. ...*..*.*. **...**.**;Tile 3943:..*...**** ...*.**... *.*.***... .*...***.* ....*.**.. .**...*..* ****.....* ****.**.*. **...*.... .**.*...*.;Tile 2039:*****.*..* *.*....*** .....*.... **.....*.* .......*.. *......*.. ..*...*..* *.*...*... ..**...*.. **.*******;Tile 1297:.*..**.*** *.....*..* ***..**..* .**..*..** ...*...... *..*....** ..*......* ...**.*..* ....**.... *..***.*..;Tile 1597:.*..*.**.. ***......* *...**...* .*.*....** ...**.**.. *.***....* ***.*..... ..*....*.* ...**....* ***.**....;Tile 1319:...*.**..* *.*****... .......... .*..*..*.. *...*.*.*. .*.**..*.. ***....... *...*.**.. ...*.....* **.*****.*;Tile 2333:*..**..**. ...*...*.* ..**.*.... *....*.**. ..**..**.* ..**..***. ...**.*..* .....*.*.* *......*.* ********..;Tile 1423:*.**..**.. *.**.....* *.*..**... **.*****.. ...*.*..*. .*..*.*.*. *.**....** ...***..** *.*.*...*. *..**.***.;Tile 1303:.********* **..*....* ..*.*.**** .......... *...*..... *.*..*...* ***.*..... .**.*....* *.*.*..*.. **..**..*."

alltiles = data.split(";")

edgematch = {}                      # bibliotek over alle edges og hvilke tiles der tilhører
edges = {}                          # bibliotek over alle tiles
# modellerer hver tile som et objekt med 4 egenskaber, nemlig 4 edges
# Hvis vi flipper denne edge, skifter vi fortegn, og ved fx tile 31, tilsvarer de
# flippede edges altså til tile -31
# skal nu lave det fulde billede:


class tile:
    def __init__(self, tiledata, flipped, id):
        self.id = id
        tmp = tiledata.split(" ")
        self.edges = [[] for i in range(4)]
        # "flipped" ændrer fra clockwise til counterclockwise
        for i in range(10):
            # first
            self.edges[0] += tmp[0][9*flipped+((-1)**flipped)*i]            # går baglænds hvis "flipped == 1"
            # second
            self.edges[1] += tmp[9*flipped+((-1)**flipped)*i][9]
            # third
            self.edges[2] += tmp[9][9*(1-flipped)+((-1)**(1-flipped))*i]    # går forlænds hvis "flipped == 1"
            # fourth
            self.edges[3] += tmp[9*(1-flipped)+((-1)**(1-flipped))*i][0]
        # tilføjer nye edges til edgematch, så vi kan finde dette element
        for i in range(4):
            self.edges[i] = str(self.edges[i])
            if(self.edges[i] in edgematch.keys()):
                edgematch[self.edges[i]].append(id)                         # Matching edge with id
            else:
                edgematch[self.edges[i]] = [id]

        # inserting as original, flipping later if needed!
        self.grid = [["_" for i in range(10)] for o in range(10)]
        for i in range(10):
            for o in range(10):
                self.grid[i][o] = tmp[i][o]

    def vals(self):
        return self.edges

# Inserting into final image
def insert(grid, tilex, tiley, rot, flipped):
    if(rot == 0):
        for i in range(8):
            for o in range(8):
                image[tiley*8 + i][tilex*8 + o] = grid[1 + i][1 + 7*flipped + ((-1)**flipped)*o]
    elif(rot == 1):
        for i in range(8):
            for o in range(8):
                image[tiley*8 + i][tilex*8 + o] = grid[1 + 7*flipped + ((-1)**flipped)*o][1 + 7-i]
    elif(rot == 2):
        for i in range(8):
            for o in range(8):
                image[tiley*8 + i][tilex*8 + o] = grid[1 + 7-i][1 + 7*(1-flipped) - ((-1)**flipped)*o]
    elif(rot == 3):
        for i in range(8):
            for o in range(8):
                image[tiley*8 + i][tilex*8 + o] = grid[1 + 7*(1-flipped) - ((-1)**flipped)*o][1 + i]


def in_out(toptile, flipped):
    # Top tile is the tile facing the sky, same whether flipped or not
    # flipping causes input and output to change places, whilst keeping the toptile intakt
    input = (toptile - 1) % 4
    output = (toptile + 1) % 4
    if(flipped):
        tmp = input
        input = output
        output = tmp
    return input, output


# Tilføjer alle nye elementer i en række, efter at det første element er blevet tilføjet
# Kræver altså enten startbrikken, eller funktionen "newfirst()" før den kan virke!
def dorow(rowindex):
    for i in range(11):
        piece = placement[rowindex][i][0]
        rotation = placement[rowindex][i][1]
        if(piece < 0):
            flipped = 1
        else:
            flipped = 0
        input, out = in_out(rotation, flipped)
        edge = edges[piece].edges[out]                      # fladen på højre side (venstre hvis flipped)
        candidates = edgematch[edge]
        for o in range(len(candidates)):
            if(visited[candidates[o]] == 0):
                newpiece = candidates[o]                    # Skal egentligt være minus for, at det skal passe
                break
        visited[newpiece] = 1
        visited[-newpiece] = 1

        if(-newpiece < 0):
            newflipped = 1
        else:
            newflipped = 0
        # find rotation to match
        for o in range(4):
            # vores edge kommer fra venstre
            if(edges[newpiece].edges[o] == edge):
                #print(o, " matcher")
                newtop = int( o + (-1)**newflipped ) % 4                 # skal have den næste til at være på toppen!
                break
        placement[rowindex][i+1][0] = -newpiece
        placement[rowindex][i+1][1] = newtop
        insert(edges[-newpiece].grid,i+1,rowindex,newtop,newflipped)


def newfirst(rowindex):
    piece = placement[rowindex-1][0][0]
    rotation = placement[rowindex-1][0][1]
    # no need to check flipping!
    edge = edges[piece].edges[(rotation+2) % 4]             # nu fladen på undersiden
    candidates = edgematch[edge]
    for o in range(len(candidates)):
        if(visited[candidates[o]] == 0):
            newpiece = candidates[o]                        # Skal egentligt være minus for, at det skal passe
            break
    visited[newpiece] = 1
    visited[-newpiece] = 1

    if(-newpiece < 0):
        newflipped = 1
    else:
        newflipped = 0
    # find rotation to match
    for o in range(4):
        # vores edge kommer fra toppen
        if(edges[newpiece].edges[o] == edge):
            newtop = o                                      # skal have den næste til at være på bunden!
            break
    placement[rowindex][0][0] = -newpiece                   # insætter inverse
    placement[rowindex][0][1] = newtop
    insert(edges[-newpiece].grid,0,rowindex,newtop,newflipped)


def printmap():
    for i in range(96):
        nospace = ""
        print(nospace.join(image[i]))
    print()
    #for i in range(12):
    #    for o in range(12):
    #        print(placement[i][o][0], end = ', ')
    #    print()


#monster = "                  * ;*    **    **    ***; *  *  *  *  *  *   "
# et monster fylder 15 felter
def ismonster(x,y,rot,flipped):
    # roterer bare monsteret!
    yvals = [0,1,1,1,1,1,1,1,1,2,2,2,2,2,2]
    xvals = [18,0,5,6,11,12,17,18,19,1,4,7,10,13,16]
    if(rot == 0):
        if(x+19 >= 96 or y+2 >= 96):
            return 0
        for i in range(15):
            if(image[y+yvals[i]][x+ 19*flipped + ((-1)**flipped)*xvals[i]] == "."):
                return 0
        for i in range(15):
            image[y+yvals[i]][x+ 19*flipped + ((-1)**flipped)*xvals[i]] = "O"
        return 1
    if(rot == 1):
        if(x-2 < 0 or y+19 >= 96):
            return 0
        for i in range(15):
            if(image[y+ 19*flipped + ((-1)**flipped)*xvals[i]][x-yvals[i]] == "."):
                return 0
        for i in range(15):
            image[y+ 19*flipped + ((-1)**flipped)*xvals[i]][x-yvals[i]] = "O"
        return 1
    if(rot == 2):
        if(x-19 < 0 or y-2 < 0):
            return 0
        for i in range(15):
            if(image[y-yvals[i]][x - 19*flipped - ((-1)**flipped)*xvals[i]] == "."):
                return 0
        for i in range(15):
            image[y-yvals[i]][x - 19*flipped - ((-1)**flipped)*xvals[i]] = "O"
        return 1
    if(rot == 3):
        if(x+2 >= 96 or y-19 < 0):
            return 0
        for i in range(15):
            if(image[y- 19*flipped - ((-1)**flipped)*xvals[i]][x+yvals[i]] == "."):
                return 0
        for i in range(15):
            image[y- 19*flipped - ((-1)**flipped)*xvals[i]][x+yvals[i]] = "O"               # markerer monsteret!
        return 1


# Comands from here, no more functions!------------------------------------------

# making all tiles, inserting their grid
for i in range(len(alltiles)):
    tmp = alltiles[i].split(":")
    id = tmp[0].split(" ")
    id = int(id[1])
    edges[id] = tile(tmp[1], 0, id)
    edges[-id] = tile(tmp[1], 1, -id)

# Now making an image to display and search through, making sure no tile is visited more than once
listedges = list(edges)
visited = {}
for i in range(len(listedges)):
    visited[listedges[i]] = 0
image = [["_" for i in range(8*12)] for o in range(8*12)]

# Starter med 1439 i øverste venstre hjørne
# skal slutte med et (8*12)x(8*12) grid
# For at matche siderne, skal der matches til "den modsatte"

#print(edgematch[edges[1439].edges[0]])
#print(edgematch[edges[1439].edges[1]])
#print(edgematch[edges[1439].edges[2]])
#print(edgematch[edges[1439].edges[3]])

# Vi kan se, at side 0 og side 1 af tile 1439 kun har denne tile med dette id,
# vi fastsætter altså side 1 som toppen

# Inserting first tile!
placement = [[[0,0] for i in range(12)] for o in range(12)]
placement[0][0] = [1439,1]
insert(edges[1439].grid, 0,0,1,0)
visited[1439] = 1
visited[-1439] = 1


# Fylder alle brikker ind her!
dorow(0)
for i in range(11):
    newfirst(i+1)
    dorow(i+1)

# skal nu lede efter sømonstre...

# prøver alle muligheder:
allmonsters = [0 for i in range(8)]
for u in range(4):                                              # alle 4 rotationer, funktion tager sig af flips
    for i in range(96):
        for o in range(96):
            # prøver både flipped og ikke flipped
            allmonsters[2*u] += ismonster(o,i,u,0)
            allmonsters[2*u + 1] += ismonster(o,i,u,1)


print("fandt ", allmonsters, " monstre")
# fandt 28 monstre, hvis vi flippede og drejede 3 gange!
# dermed vil der være tilbage:
roughwater = 0
for i in range(96):
    for o in range(96):
        if(image[i][o] == "*" or image[i][o] == "O"):
            roughwater += 1

roughwater -= 28*15

print("endelig roughwater er: ",roughwater)

printmap()

# 2453
"""

alltiles:

1621 -1621 3671 -3671 2803 -2803 1531 -1531 1811 -1811 2143 -2143 2887 -2887 3511 -3511 3911 -3911 3821 -3821 3539 -3539 3251 -3251 2677 -2677 3011 -3011 1489 -1489 3769 -3769 2293 -2293 3947 -3947 1223 -1223 3331 -3331 3691 -3691 1289 -1289 2857 -2857 3559 -3559 2633 -2633 1973 -1973 1373 -1373 1759 -1759 1213 -1213 2341 -2341 3547 -3547 2003 -2003 2861 -2861 3697 -3697 3929 -3929 3527 -3527 1777 -1777 1543 -1543 2063 -2063 1181 -1181 3491 -3491 1873 -1873 2579 -2579 1481 -1481 2417 -2417 3581 -3581 3593 -3593 3167 -3167 1439 -1439 1249 -1249 2687 -2687 2693 -2693 1741 -1741 3413 -3413 3191 -3191 2897 -2897 2017 -2017 2939 -2939 1753 -1753 3229 -3229 1367 -1367 2851 -2851 2357 -2357 1697 -1697 1571 -1571 3323 -3323 3461 -3461 2719 -2719 3359 -3359 3803 -3803 3019 -3019 2791 -2791 3881 -3881 2087 -2087 1789 -1789 2539 -2539 2111 -2111 1433 -1433 1667 -1667 2389 -2389 1069 -1069 1103 -1103 3761 -3761 2473 -2473 1987 -1987 1187 -1187 2699 -2699 3643 -3643 3463 -3463 1117 -1117 1163 -1163 3557 -3557 2467 -2467 1471 -1471 3931 -3931 2029 -2029 1913 -1913 2213 -2213 1511 -1511 2243 -2243 3701 -3701 3137 -3137 2437 -2437 1009 -1009 2399 -2399 2843 -2843 1193 -1193 1951 -1951 1879 -1879 3469 -3469 2161 -2161 2083 -2083 2089 -2089 1051 -1051 3347 -3347 2927 -2927 1301 -1301 2459 -2459 1583 -1583 3533 -3533 1993 -1993 3853 -3853 2113 -2113 3319 -3319 3847 -3847 1283 -1283 2957 -2957 1097 -1097 1399 -1399 1451 -1451 1559 -1559 3391 -3391 2423 -2423 2297 -2297 2011 -2011 1049 -1049 3943 -3943 2039 -2039 1297 -1297 1597 -1597 1319 -1319 2333 -2333 1423 -1423 1303 -1303


Hvem har kun 2 naboer:
3803
1571
1439
3539
"""
